using System;
using Gravitas.DAL.Repository._Base;
using Gravitas.Model.DomainModel.ExternalData.AcceptancePoint.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.Budget.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.Budget.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.Contract.DTO;
using Gravitas.Model.DomainModel.ExternalData.Crop.DTO;
using Gravitas.Model.DomainModel.ExternalData.DeliveryBill.DTO;
using Gravitas.Model.DomainModel.ExternalData.Employee.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.Employee.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.ExternalUser.DTO;
using Gravitas.Model.DomainModel.ExternalData.FixedAsset.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.FixedAsset.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.LabClassifier.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.LabClassifier.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.MeasureUnit.DTO;
using Gravitas.Model.DomainModel.ExternalData.Organization.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.Organization.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.Partner.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.Partner.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.Product.DTO;
using Gravitas.Model.DomainModel.ExternalData.Product.List;
using Gravitas.Model.DomainModel.ExternalData.ReasonForRefund.DTO;
using Gravitas.Model.DomainModel.ExternalData.Route.DTO;
using Gravitas.Model.DomainModel.ExternalData.Stock.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.Stock.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.Subdivision.DTO;
using Gravitas.Model.DomainModel.ExternalData.SupplyTransportType.DTO.Detail;
using Gravitas.Model.DomainModel.ExternalData.SupplyTransportType.DTO.List;
using Gravitas.Model.DomainModel.ExternalData.SupplyType.DTO;
using Gravitas.Model.DomainModel.ExternalData.YearOfHarvest.DTO;

namespace Gravitas.DAL.Repository.ExternalData
{
    public interface IExternalDataRepository : IBaseRepository
    {
        AcceptancePointDetail GetAcceptancePointDetail(Guid id);
        BudgetDetail GetBudgetDetail(Guid id);
        ContractDetail GetContractDetail(Guid id);
        CropDetail GetCropDetail(Guid id);
        DeliveryBillStatusDetail GetDeliveryBillStatusDetail(Guid id);
        DeliveryBillTypeDetail GetDeliveryBillTypeDetail(string id);
        EmployeeDetail GetEmployeeDetail(Guid id);
        ExternalEmployeeDetail GetExternalEmployeeDetail(Guid id);
        string GetProductDetail(object value);
        FixedAssetDetail GetFixedAssetDetail(Guid id);
        LabImpurityСlassifierDetail GetLabImpurityСlassifierDetail(string id);
        LabHumidityСlassifierDetail GetLabHumidityСlassifierDetail(string id);
        LabInfectionedСlassifierDetail GetLabInfectionedСlassifierDetail(string id);
        MeasureUnitDetail GetMeasureUnitDetail(Guid id);
        OriginTypeDetail GetOriginTypeDetail(Guid id);
        OrganisationDetail GetOrganisationDetail(Guid id);
        PartnerDetail GetPartnerDetail(Guid id);
        ProductDetail GetProductDetail(Guid id);
        ReasonForRefundDetail GetReasonForRefundDetail(Guid id);
        RouteDetail GetRouteDetail(Guid id);
        StockDetail GetStockDetail(Guid id);
        SubdivisionDetail GetSubdivisionDetail(Guid id);
        SupplyTransportTypeDetail GetSupplyTransportTypeDetail(Guid id);
        SupplyTypeDetail GetSupplyTypeDetail(Guid id);
        YearOfHarvestDetail GetYearOfHarvestDetail(Guid id);
        ProductItems GetProductChildItems(Guid id);
        ProductItems GetProductItems();
        BudgetItems GetBudgetItems();
        EmployeeItems GetEmployeeItems();
        OrganisationItems GetOrganisationItems();
        FixedTrailerItems GetFixedTrailerItems(int pageNo, int perPageNo);
        PartnerItems GetFilteredPagePartnerItems(int pageNo, int perPageNo, string filter);
        EmployeeItems GetFilteredPageEmployeeItems(int pageNo, int perPageNo, string filter);
        StockItems GetFilteredPageStockItems(int pageNo, int perPageNo, string filter);
        FixedTrailerItems GetFilteredPageFixedTrailerItems(int pageNo, int perPageNo, string filter);
        FixedAssetItems GetFilteredPageFixedAssetItems(int pageNo, int perPageNo, string filter);
        ProductItems GetFilteredPageProductItems(int pageNo, int perPageNo, string filter);
        PartnerItems GetPartnerItems();
        StockItems GetStockItems();
        SupplyTransportTypeItems GetSupplyTransportTypeItems();
        LabHumidityСlassifierItems GetLabHumidityСlassifierItems();
        LabImpurityСlassifierItems GetLabImpurityСlassifierItems();
        LabInfectionedСlassifierItems GetLabInfectionedСlassifierItems();
        LabDeviceResultTypeItems GetLabDevResultTypeItems();
        BudgetItems GetBudgetChildItem(Guid parentId);
        PartnerItems GetPartnerChildItems(Guid parentId);
        EmployeeItems GetEmployeeChildItems(Guid parentId);
    }
}