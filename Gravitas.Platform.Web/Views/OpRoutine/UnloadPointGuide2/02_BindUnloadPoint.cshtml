@model Gravitas.Platform.Web.ViewModel.OpRoutine.UnloadPointGuide2.UnloadPointGuide2Vms.BindUnloadPointVm
@Html.HiddenFor(m => m.NodeId, new { id = "nodeId" })

<div class="row mt-3">
    <div class="col-12">
        <div class="card ">
            <div class="card-header">
                <h5 class="card-title">Показники за документами</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(m => m.HumidityValue)
                        @Html.EditorFor(m => m.HumidityValue, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(m => m.ImpurityValue)
                        @Html.EditorFor(m => m.ImpurityValue, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(m => m.EffectiveValue)
                        @Html.EditorFor(m => m.EffectiveValue, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 form-group">
                        @Html.LabelFor(m => m.TransportNo)
                        @Html.EditorFor(m => m.TransportNo, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                    <div class="col-lg-6 form-group">
                        @Html.LabelFor(m => m.TrailerNo)
                        @Html.EditorFor(m => m.TrailerNo, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-2 form-group">
                        @Html.LabelFor(m => m.IsThirdPartyCarrier)
                            @{
                                var transport = Model.IsThirdPartyCarrier ? "Сторонній" : "Власний";
                        }
                            <input value="@transport" class="form-control" disabled="disabled"/>
                    </div>
                    <div class="col-lg-5 form-group">
                        @Html.LabelFor(m => m.SenderName)
                        @Html.EditorFor(m => m.SenderName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                    <div class="col-lg-5 form-group">
                        @Html.LabelFor(m => m.ProductName)
                        @Html.EditorFor(m => m.ProductName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 form-group">
                        @Html.LabelFor(m => m.Comment)
                        @Html.EditorFor(m => m.Comment, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 form-group">
                        @Html.LabelFor(m => m.LabComment)
                        @Html.EditorFor(m => m.LabComment, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>
                @using (Ajax.BeginForm("BindUnloadPoint_Next", "UnloadPointGuide2", null, null, FormMethod.Post)) {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.NodeId, new { @id = "nodeId" })

                    <div class="row">
                        <div class="col-lg-12 form-group">
                            @Html.LabelFor(m => m.UnloadNodeId)
                            @Html.DropDownListFor(
                                m => m.UnloadNodeId,
                                Model.NodeItems.Select(d => new SelectListItem { Value = d.Id.ToString(), Text = d.Title }),
                                "- - - Оберіть значення - - -",
                                new { @class = "form-control" })
                        </div>
                    </div>

                    <diw class="row justify-content-between">
                        <div class="col-md-3 col-sm-6">
                            @Ajax.ActionLink(@"Назад", "BindUnloadPoint_Back", "UnloadPointGuide2", new { nodeId = Model.NodeId }, null, new { @class = "btn btn-danger btn-lg btn-block" })
                        </div>
                        <div class="col-6">
                            <input type="submit" value="Призначити пункт вивантаження" class="btn btn-lg btn-primary btn-block"/>
                        </div>
                    </diw>
                }
            </div>
        </div>
    </div>
</div>