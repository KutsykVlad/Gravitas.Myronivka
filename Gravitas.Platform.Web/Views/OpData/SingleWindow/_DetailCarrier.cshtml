@using Gravitas.Platform.Web.Models
@using Gravitas.Platform.Web.ViewModel
@using Newtonsoft.Json
@model SingleWindowVms.SingleWindowOpDataDetailVm

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.NodeId, new { @id = "nodeId" })

<div class="form-row">

  <div class="form-group col-lg-12">
    @Html.LabelFor(model => model.ContactPhoneNo, htmlAttributes: new { @class = "" })

    @Html.EditorFor(model => model.ContactPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.ContactPhoneNo, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.IsThirdPartyCarrier, htmlAttributes: new { @class = "" })

    @Html.EditorFor(model => model.IsThirdPartyCarrier, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.IsThirdPartyCarrier, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.CarrierCode, htmlAttributes: new { @class = "" })

    @Html.DropDownListFor(
      model => model.CarrierCode,
      ((PartnerItemsVm) ViewBag.PartnerItems).Items.Select(d => new SelectListItem { Value = d.FullName, Text = d.ShortName }), new { @class = "form-control" })

    @*@Html.EditorFor(model => model.CarrierCode, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.ValidationMessageFor(model => model.CarrierCode, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.TransportId, htmlAttributes: new { @class = "" })

    @Html.DropDownListFor(
      model => model.TransportId,
      ((FixedAssetItemsVm) ViewBag.FixedAssetItems).Items.Select(d => new SelectListItem { Value = d.Id, Text = d.RegistrationNo}), new { @class = "form-control" })

    @*@Html.EditorFor(model => model.TransportId, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.ValidationMessageFor(model => model.TransportId, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.TrailerId, htmlAttributes: new { @class = "" })

    @Html.DropDownListFor(
      model => model.TrailerId,
      ((FixedAssetItemsVm) ViewBag.FixedAssetItems).Items.Select(d => new SelectListItem { Value = d.Id, Text = d.RegistrationNo}), new { @class = "form-control" })


    @*@Html.EditorFor(model => model.TrailerId, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.ValidationMessageFor(model => model.TrailerId, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    <div>
      @Html.LabelFor(model => model.DriverOneId, htmlAttributes: new { @class = "" })
    </div>
    @*@Html.EditorFor(model => model.DriverOneId, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.DropDownListFor(
      model => model.DriverOneId,
      ((EmployeeItemsVm) ViewBag.EmployeeItems).Items.Select(d => new SelectListItem { Value = d.Id.ToString(), Text = d.FullName }), new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.DriverOneId, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.DriverTwoId, htmlAttributes: new { @class = "" })

    @*@Html.EditorFor(model => model.DriverTwoId, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.DropDownListFor(
      model => model.DriverTwoId,
      ((EmployeeItemsVm) ViewBag.EmployeeItems).Items.Select(d => new SelectListItem { Value = d.Id.ToString(), Text = d.FullName }), new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.DriverTwoId, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.HiredTansportNumber, htmlAttributes: new { @class = "" })
    @Html.EditorFor(model => model.HiredTansportNumber, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.HiredTansportNumber, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.TrailerNumber, htmlAttributes: new { @class = "" })
    @Html.EditorFor(model => model.TrailerNumber, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.TrailerNumber, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.HiredDriverCode, htmlAttributes: new { @class = "" })

    @Html.EditorFor(model => model.HiredDriverCode, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.HiredDriverCode, "", new { @class = "text-danger" })
  </div>

  <div class="form-group col-lg-12">
    @Html.LabelFor(model => model.InformationCarrier, htmlAttributes: new { @class = "" })
    @Html.TextAreaFor(model => model.InformationCarrier, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.InformationCarrier, "", new { @class = "text-danger" })
  </div>
  <div class="form-group col-lg-6">
    @Html.LabelFor(model => model.CarrierRouteId, htmlAttributes: new { @class = "" })
    @Html.EditorFor(model => model.CarrierRouteId, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.CarrierRouteId, "", new { @class = "text-danger" })
  </div>

</div>